âš¡ Firmware Code
cpp
CopyEdit
#include <WiFi.h>
#include <HTTPClient.h>
#include <PZEM004Tv30.h>

// WiFi credentials
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";

// ThingSpeak
const char* thingSpeakApiKey = "YOUR_THINGSPEAK_WRITE_API_KEY";
const char* thingSpeakServer = "http://api.thingspeak.com/update";

// PZEM-004T RX and TX pins (connect to ESP32 UART pins)
#define PZEM_RX 16  // Connect to PZEM TX
#define PZEM_TX 17  // Connect to PZEM RX

HardwareSerial pzemSerial(2); // Use UART2

PZEM004Tv30 pzem(&pzemSerial);

void setup() {
  Serial.begin(115200);
  delay(1000);
  Serial.println("Smart Energy Monitoring System Starting...");

  pzemSerial.begin(9600, SERIAL_8N1, PZEM_RX, PZEM_TX);

  connectWiFi();
}

void loop() {
  float voltage = pzem.voltage();
  float current = pzem.current();
  float power = pzem.power();
  float energy = pzem.energy();
  float frequency = pzem.frequency();
  float pf = pzem.pf();

  Serial.printf("Voltage: %.2f V, Current: %.3f A, Power: %.2f W, Energy: %.3f Wh, Frequency: %.2f Hz, PF: %.2f\n",
                voltage, current, power, energy, frequency, pf);

  if (voltage != NAN) { // basic validation
    sendToThingSpeak(voltage, current, power, energy);
  } else {
    Serial.println("Failed to read from PZEM sensor");
  }

  delay(15000); // every 15 seconds
}

void connectWiFi() {
  Serial.print("Connecting to WiFi...");
  WiFi.begin(ssid, password);
  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED && attempts < 20) {
    delay(500);
    Serial.print(".");
    attempts++;
  }
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("Connected.");
  } else {
    Serial.println("Failed to connect.");
  }
}

void sendToThingSpeak(float voltage, float current, float power, float energy) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    String url = String(thingSpeakServer) + "?api_key=" + thingSpeakApiKey +
                 "&field1=" + String(voltage) +
                 "&field2=" + String(current) +
                 "&field3=" + String(power) +
                 "&field4=" + String(energy);

    http.begin(url);
    int httpResponseCode = http.GET();

    if (httpResponseCode > 0) {
      Serial.printf("ThingSpeak updated successfully: %d\n", httpResponseCode);
    } else {
      Serial.printf("ThingSpeak update failed: %d\n", httpResponseCode);
    }
    http.end();
  } else {
    Serial.println("WiFi disconnected, reconnecting...");
    connectWiFi();
  }
}
