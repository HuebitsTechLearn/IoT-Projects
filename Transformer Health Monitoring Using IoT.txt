cpp
CopyEdit
#include <Wire.h>
#include <Adafruit_INA219.h>
#include <OneWire.h>
#include <DallasTemperature.h>
#include <WiFi.h>
#include <HTTPClient.h>

#define ONE_WIRE_BUS 14
#define RELAY_PIN 15

const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";
String apiKey = "YOUR_THINGSPEAK_API_KEY";
const char* server = "http://api.thingspeak.com/update";

Adafruit_INA219 ina219;
OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  while(WiFi.status() != WL_CONNECTED){
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nConnected to WiFi");

  ina219.begin();
  sensors.begin();

  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, LOW); // Default: relay off
}

void loop() {
  sensors.requestTemperatures();
  float temperature = sensors.getTempCByIndex(0);
  float voltage = ina219.getBusVoltage_V();
  float current = ina219.getCurrent_mA() / 1000.0; // in Amps
  float power = voltage * current;

  Serial.printf("Temp: %.2f C, Voltage: %.2f V, Current: %.2f A\n", temperature, voltage, current);

  // Trigger relay if thresholds are crossed
  if(temperature > 75.0 || current > 5.0){
    digitalWrite(RELAY_PIN, HIGH); // Disconnect transformer
    Serial.println(" Fault detected â€” Relay triggered!");
  } else {
    digitalWrite(RELAY_PIN, LOW);  // Keep running
  }

  // Send to ThingSpeak
  if(WiFi.status() == WL_CONNECTED){
    HTTPClient http;
    String url = server + "?api_key=" + apiKey +
                 "&field1=" + String(temperature) +
                 "&field2=" + String(voltage) +
                 "&field3=" + String(current);
    http.begin(url);
    int httpCode = http.GET();
    if(httpCode > 0){
      Serial.println(" Data sent to ThingSpeak");
    } else {
      Serial.println(" Error sending data");
    }
    http.end();
  }

  delay(15000); // ThingSpeak limit
}
